---
- name: play1
  hosts: localhost
  vars:
    datenow: "{{ ansible_facts['ansible_date_time']['date'] }}"
    com_list:
      - 192.168.122.242
      - 10.64.201.220
      - 10.64.201.155
      - 10.64.201.217
      - 10.64.201.211
      - 10.64.201.204
      - 10.64.201.181
        
  tasks:
    - name: sending_ping
      raw: "ping -c 5 {{ item }}"
      register: result
      # when: hostname is match (item.leaf_name)
      with_items: "{{ com_list }}"
      # loop_control:
      #   label: "com_list"
      # no_log: true
      ignore_errors: yes

    - debug:
        var: result

    # OKのping結果を表示する
    - name: judge_OK
      debug:
        msg:
        - "OK"
        - "{{ item.1.stdout_lines }}"
      with_indexed_items: "{{ result.results }}"
      register: OK
      loop_control:
        label: "results"
      when: item.1.stdout_lines is defined and item.1.stdout is match("time=")

    # 各ホストのOKの数を表示する
    - name: count_OK
      debug:
        msg: "{{ item.1.msg | length / 2}}"
      with_indexed_items: "{{ OK.results }}"
      register: count_OK
      loop_control:
        label: "OK"
      when : item.1.msg is defined

    # NGのping結果を確認する
    - name: judge_NG
      debug:
        msg:
        - "NG: {{ comment_set.results[item.0].msg }}"
        - "{{ item.1.stdout_lines }}"
      with_indexed_items: "{{ result.results }}"
      register: NG
      # loop_control:
      #   label: "results"
      when: item.1.stdout_lines is defined and item.1.stdout is match("Unreachable")

    # 各ホストのNGの数を表示する
    - name: count_NG
      debug:
        msg: "{{ item.1.msg | length / 2 }}"
      with_indexed_items: "{{ NG.results }}"
      register: count_NG
      loop_control:
        label: "NG"
      when : item.1.msg is defined

    - debug:
        var: count_OK.results

    - debug:
        var: count_NG.results

#     - name: setup the variable to dump_OK　＃エラー発生個所
#       set_fact:
#         outputvarOK:
#           hostname_OK: "{{ inventory_hostname }}"
#           ok_count: "{{ item.1.msg }}"
#       with_indexed_items: "{{ count_OK.results }}"
#       # loop_control:
#       #   label: "OK"
#       when : item.1.msg is defined

#     - name: setup the variable to dump_NG
#       set_fact:
#         outputvarNG:    
#           hostname_NG: "{{ inventory_hostname }}"  # ここでは random で乱数のダミーデータを生成していますが、count_OK で得られた値を使ってください
#           ng_count: "{{ item.1.msg }}"      # 同上。ただし count_NG を使ってください
#       with_indexed_items: "{{ count_NG.results }}"
#       # loop_control:
#       #   label: "NG"
#       when : item.1.msg is defined

#       # 前のタスクで生成したデータを JSON フォーマットで一時ファイルに出力する
# # 後で localhost 上で集計を行うため、localhost 上でモジュールを実行してファイルも locahost に作成されるようにしている
#     - name: dump the variable to a local file
#       copy:
#         content:
#         - "{{ outputvarOK | to_yaml }}"
#         - "{{ outputvarNG | to_yaml }}"
#         dest: "/var/tmp/test_{{ datenow }}_{{ inventory_hostname }}.yml"
#         force: yes
#       delegate_to: localhost

- name: play2
  hosts: localhost
  connection: local
  gather_facts: yes
  vars:
    today: "{{ ansible_facts['ansible_date_time']['date'] }}"
    total_ok: 0
    total_ng: 0

  tasks:
    #ファイル読み込み
    - name: read and count the variables in all .yml files
      include_tasks:
        file: inc_lpn_pin.yml
      with_fileglob:
        - "/var/tmp/test_{{ today }}_*.yml"

    #OK判定、NG判定のコマンド数をそれぞれ表示
    - name: print total counts
      debug:
        msg: "Total OKs = {{ total_ok }}, Total NGs = {{ total_ng }}"
