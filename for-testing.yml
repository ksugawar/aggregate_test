---
- name: play1
  hosts: localhost
  vars:
    datenow: "{{ ansible_facts['ansible_date_time']['date'] }}"
    com_list:
      - 192.168.122.242
      - 10.64.201.220
      - 10.64.201.155
      - 10.64.201.217
      - 10.64.201.211
      - 10.64.201.204
      - 10.64.201.181
        
  tasks:
    - name: sending_ping
      raw: "ping -c 5 {{ item }}"
      register: result
      # when: hostname is match (item.leaf_name)
      loop: "{{ com_list }}"
      # loop_control:
      #   label: "com_list"
      # no_log: true
      ignore_errors: yes

    # - debug:
    #     var: result

    # - debug:
    #     msg: "{{ result.results|flatten(levels=1) }}"

    # OKのping結果を表示する
    - name: judge_OK
      debug:
        msg:
          - "OK"
          - "{{ item.stdout_lines }}"
      loop: "{{ result.results | flatten(levels=1) }}"
      register: OK
      # loop_control:
      #   label: "results"
      when: item.stdout_lines is defined and item.stdout is search("time=")

    - name: debug OK
      debug:
        var: OK

    # 各ホストのOKの数を表示する
    - name: count_OK
      debug:
        msg: "{{ item.msg | length / 2}}"
      loop: "{{ OK.results | flatten(levels=1) }}"
      register: count_OK
      # loop_control:
      #   label: "OK"
      when : item.msg is defined

    # NGのping結果を確認する
    - name: judge_NG
      debug:
        msg:
        - "NG"
        - "{{ item.stdout_lines }}"
      loop: "{{ result.results | flatten(levels=1) }}"
      register: NG
      # loop_control:
      #   label: "results"
      when: item.stdout_lines is defined and item.stdout is not search("time=")

    # 各ホストのNGの数を表示する
    - name: count_NG
      debug:
        msg: "{{ item.msg | length / 2 }}"
      loop: "{{ NG.results | flatten(levels=1) }}"
      register: count_NG
      # loop_control:
      #   label: "NG"
      when : item.msg is defined

    - debug:
        var: count_OK.results

    - debug:
        var: count_NG.results

    - name: initialize OK/NG counts
      set_fact:
        ok_count: 0
        ng_count: 0

    - name: count OK
      set_fact:
        ok_count: "{{ ok_count|int + item.msg|int }}"
      loop: "{{ count_OK.results | flatten(levels=1) }}"
      when : item.msg is defined

    - name: count NG
      set_fact:
        ng_count: "{{ ng_count|int + item.msg|int }}"
      loop: "{{ count_NG.results | flatten(levels=1) }}"
      when : item.msg is defined

    - name: show OK/NG counts
      debug:
        msg: "ok_count = {{ ok_count }}, ng_count = {{ ng_count }}"

    - name: setup the variable to dump
      set_fact:
        output_var:
          hostname: "{{ inventory_hostname }}"
          ok_count: "{{ ok_count }}"
          ng_count: "{{ ng_count }}"

    - name: dump the variable to a local file
      copy:
        content: "{{ output_var | to_yaml }}"
        dest: "/var/tmp/test_{{ datenow }}_{{ inventory_hostname }}.yml"
        force: yes
      delegate_to: localhost

- name: play2
  hosts: localhost
  gather_facts: yes
  vars:
    today: "{{ ansible_facts['ansible_date_time']['date'] }}"
    total_ok: 0
    total_ng: 0

  tasks:
    #ファイル読み込み
    - name: read and count the variables in all .yml files
      include_tasks:
        file: loopblock.yml
      with_fileglob:
        - "/var/tmp/test_{{ today }}_*.yml"

    #OK判定、NG判定のコマンド数をそれぞれ表示
    - name: print total counts
      debug:
        msg: "Total OKs = {{ total_ok }}, Total NGs = {{ total_ng }}"
